---
- hosts: all
  become: true
  tasks:
    - name: Add Docker yum repository
      yum_repository:
        name: dockerrepo
        description: Docker
        baseurl: https://yum.dockerproject.org/repo/main/centos/$releasever/
        gpgkey: https://yum.dockerproject.org/gpg
        gpgcheck: yes

    - name: Update all packages
      yum: name=* state=present update_cache=yes

    - name: Install packages
      yum: state=present name={{ item }}
      with_items:
      - curl
      - ipset
      - git
      - net-tools
      - ntp
      - nc
      - xz
      - unzip
      - telnet
      - docker-engine-1.13.1
      - docker-engine-selinux-1.13.1

    - name: Stop firewalld service due to conflicts with Docker
      systemd:
        state: stopped
        name: firewalld
        enabled: no

    - name: Force a time sync
      command: ntpdate 0.pool.ntp.org

    - name: Enable timedatectl to sync time
      command: timedatectl set-ntp true

    - name: Sync the hardware clock with the system
      command: timedatectl set-local-rtc 0

    - name: Create overlay kernel module file
      lineinfile:
        create: yes
        path: /etc/modules-load.d/overlay.conf
        line: 'overlay'

    - name: Load overlay kernel module
      modprobe:
        name: overlay
        state: present

    - name: Create systemd service directory for OverlayFS
      file: path=/etc/systemd/system/docker.service.d state=directory

    - name: Create systemd service file for OverlayFS
      blockinfile:
        path: /etc/systemd/system/docker.service.d/override.conf
        create: yes
        block: |
         [Service]
         ExecStart=
         ExecStart=/usr/bin/dockerd --storage-driver=overlay

    - name: Start Docker service
      systemd:
        state: reloaded
        name: docker
        enabled: yes
    
    - name: set SELinux to permissive
      selinux:
        policy: targeted
        state: permissive

    - name: add nogroup requirement
      group:
        name: nogroup
        state: present

    - name: Create mesosphere directory for assets
      file:
        path: /root/mesosphere
        state: directory

- hosts: bootstrap
  become: true
  tasks:
    - name: Create genconf directory
      file: 
        path: /root/mesosphere/genconf
        state: directory

    - name: Symlink in the DC/OS installer
      file: 
        src: /vagrant/dcos_generate_config.ee.sh
        dest: /root/mesosphere/dcos_generate_config.ee.sh
        state: link
        mode: 0755

    - name: Copy the ip-detect script
      template:
        src: ip-detect.j2
        dest: /root/mesosphere/genconf/ip-detect
        mode: 0755
    
    - name: Copy the config.yaml
      template:
        src: config.yaml.j2
        dest: /root/mesosphere/genconf/config.yaml

    - name: Run dcos_generate_config.ee.sh to generate the payload
      shell: /bin/bash dcos_generate_config.ee.sh
      args:
        chdir: /root/mesosphere

    - name: Launch the bootstrap nginx container
      shell : docker run -d -p 80:80 -v /root/mesosphere/genconf/serve:/usr/share/nginx/html:ro nginx

- hosts: master
  become: true
  tasks:
    - name: Get the installer from the bootstrap node
      get_url:
        url: http://192.168.33.10:80/dcos_install.sh
        dest: /root/mesosphere/dcos_install.sh
        mode: 0644

    - name: Run the installer for the master
      shell: bash dcos_install.sh master
      args:
        chdir: /root/mesosphere

    - name: Install the dcos cli
      get_url:
        url: https://downloads.dcos.io/binaries/cli/linux/x86-64/dcos-1.9/dcos
        dest: /usr/local/bin/dcos
        mode: 0755

    - name: Set dcos cli url
      shell: /usr/local/bin/dcos config set core.dcos_url http://master.mesos

    - name: dcos auth
      shell: /usr/local/bin/dcos auth login --username=admin --password=password

- hosts: private-agent
  become: true
  tasks:
    - name: Get the installer from the bootstrap node
      get_url:
        url: http://192.168.33.10:80/dcos_install.sh
        dest: /root/mesosphere/dcos_install.sh
        mode: 0644

    - name: Run the installer for the private agent
      shell: bash dcos_install.sh slave
      args:
        chdir: /root/mesosphere


- hosts: public-agent
  become: true
  tasks:
    - name: Get the installer from the bootstrap node
      get_url:
        url: http://192.168.33.10:80/dcos_install.sh
        dest: /root/mesosphere/dcos_install.sh
        mode: 0644

    - name: Run the installer for the public agent
      shell: bash dcos_install.sh public_slave
      args:
        chdir: /root/mesosphere
















