---
- hosts: all
  become: true
  tasks:
    - name: Add Docker yum repository
      yum_repository:
        name: dockerrepo
        description: Docker
        baseurl: https://yum.dockerproject.org/repo/main/centos/$releasever/
        gpgkey: https://yum.dockerproject.org/gpg
        gpgcheck: yes

    - name: Update all packages
      yum: name=* state=present update_cache=yes

    - name: Install packages
      yum: state=present name={{ item }}
      with_items:
      - curl
      - ipset
      - git
      - net-tools
      - ntp
      - nc
      - xz
      - unzip
      - telnet
      - docker-engine-1.13.1
      - docker-engine-selinux-1.13.1

    - name: Stop firewalld service due to conflicts with Docker
      systemd:
        state: stopped
        name: firewalld
        enabled: no

    - name: Force a time sync
      command: ntpdate 0.pool.ntp.org

    - name: Enable timedatectl to sync time
      command: timedatectl set-ntp true

    - name: Sync the hardware clock with the system
      command: timedatectl set-local-rtc 0

    - name: Create overlay kernel module file
      lineinfile:
        create: yes
        path: /etc/modules-load.d/overlay.conf
        line: 'overlay'

    - name: Load overlay kernel module
      modprobe:
        name: overlay
        state: present

    - name: Create systemd service directory for OverlayFS
      file: path=/etc/systemd/system/docker.service.d state=directory

    - name: Create systemd service file for OverlayFS
      blockinfile:
        path: /etc/systemd/system/docker.service.d/override.conf
        create: yes
        block: |
         [Service]
         ExecStart=
         ExecStart=/usr/bin/dockerd --storage-driver=overlay

    - name: Create Docker config directory
      file:
        path: /etc/docker
        state: directory

    - name: Copy the Docker daemon.json
      template:
        src: daemon.json.j2
        dest: /etc/docker/daemon.json

    - name: Start Docker service
      systemd:
        state: reloaded
        name: docker
        enabled: yes

    - name: Set SELinux to permissive
      selinux:
        policy: targeted
        state: permissive

    - name: Add nogroup requirement
      group:
        name: nogroup
        state: present

    - name: Create mesosphere directory for assets
      file:
        path: /root/mesosphere
        state: directory

    - name: Create install directory for
      file:
        path: /opt/dcos_install_tmp
        state: directory

    - name: Unarchive the installer
      unarchive:
        src: /vagrant/dcos-install.tar
        dest: /opt/dcos_install_tmp
        remote_src: yes

- hosts: master
  become: true
  tasks:
    - name: Run the installer for the master
      shell: bash dcos_install.sh master
      args:
        chdir: /opt/dcos_install_tmp

- hosts: private-agent
  become: true
  tasks:
    - name: Run the installer for the Private Agent
      shell: bash dcos_install.sh slave
      args:
        chdir: /opt/dcos_install_tmp

- hosts: public-agent
  become: true
  tasks:
    - name: Run the installer for the Public Agent
      shell: bash dcos_install.sh slave_public
      args:
        chdir: /opt/dcos_install_tmp
